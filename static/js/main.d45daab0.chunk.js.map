{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","isSelected","setIsSelected","className","map","todo","id","completed","title","classNames","type","onClick","TodoFilter","query","setQuery","setFilterStatus","onSubmit","event","preventDefault","onChange","target","value","All","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","item","catch","Error","href","email","name","App","setTodos","isLoading","setIsLoading","filterStatus","finally","filteredTodos","useMemo","todoList","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d45daab0.chunk.js","sourcesContent":["export const enum Status {\n  All = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  isSelected: Todo | null;\n  setIsSelected: (value: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  isSelected,\n  setIsSelected,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, completed, title } = todo;\n\n        return (\n          <tr data-cy=\"todo\" className=\"\" key={id}>\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setIsSelected(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames({\n                    'far fa-eye': !isSelected,\n                    'far fa-eye-slash': isSelected,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  query: string;\n  setQuery: (value: string) => void;\n  setFilterStatus: (value: Status) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setFilterStatus,\n}) => {\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterStatus(event.target.value as Status);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={onSubmit}\n    >\n      <p className=\"control\">\n        <span\n          className=\"select\"\n          onChange={handleFilterChange}\n        >\n          <select data-cy=\"statusSelect\">\n            <option value={Status.All}>All</option>\n            <option value={Status.ACTIVE}>Active</option>\n            <option value={Status.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nexport const BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  isSelected: Todo;\n  setIsSelected: (value: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ isSelected, setIsSelected }) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(isSelected.userId)\n      .then(item => setUser(item))\n      .catch(() => {\n        throw new Error('Something wron with a user');\n      });\n  }, [isSelected.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${isSelected.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setIsSelected(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {isSelected.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {isSelected.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isSelected, setIsSelected] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filterStatus, setFilterStatus] = useState(Status.All);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(item => setTodos(item))\n      .catch(() => {\n        throw new Error('something wrong');\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredTodos: Todo[] = useMemo(() => {\n    let todoList = [...todos];\n\n    if (query) {\n      todoList = todoList.filter(\n        todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n      );\n    }\n\n    switch (filterStatus) {\n      case (Status.ACTIVE):\n        return todoList.filter(todo => !todo.completed);\n\n      case (Status.COMPLETED):\n        return todoList.filter(todo => todo.completed);\n\n      default:\n        return todoList;\n    }\n  }, [query, todos, filterStatus]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setFilterStatus={setFilterStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  isSelected={isSelected}\n                  setIsSelected={setIsSelected}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isSelected && (\n        <TodoModal\n          isSelected={isSelected}\n          setIsSelected={setIsSelected}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}